@Library("sonarqubeLibrary@master")
import org.technion.sonarqube.*

node('SoanrQubeNode') {
    
    // clean workspace:
    stage('cleanup') {
        cleanWs()
    }
    
    // clone project to workspace folder (notice the "." after the url):
    stage('clone repository') {
        run("git clone " + "${GIT_URL}" + " .")
    }
    
    // export gate:
    stage('export gate') {
        try {
            def exportGate = new ExportGate()
            exportGate.exportGate("${SONARQUBE_SERVER}", "${WORKSPACE}\\${GATES_DIRECTORY}", "${GATE_NAME}", "${OUTPUT_FILENAME}")        
        } catch(IOException e) {
            println(e.getMessage())
            currentBuild.result = 'FAILURE'
        }
    }
    
    // in case of failure in previous stage - return:
    if (currentBuild.result == 'FAILURE') {
        return
    }
    
    // update repository:
    stage('push gate to repository') {
        run("git add ${GATES_DIRECTORY}")       
        run('git diff-index --quiet HEAD || git commit -m "Sonar gates changes"')
        run("git push")
    }
}

def run(command) {
    if(isUnix()) {
        shell(command)
    } else {
        bat(command)
    }
}
